@model TravelCat.Models.member

@{
    ViewBag.Title = "會員註冊";
    Layout = "~/Views/Shared/web-Layout.cshtml";
}
<link href="~/Content/web-Login.css" rel="stylesheet" />

<div class="container">
    <div class="main">
        <ul>
            <li class="Login-index"><a href="/Home/Login">登入</a></li>
            <li class="Register-index"><a class="active" href="/Register/Index">註冊</a></li>
        </ul>
        <div class="Login-box">
            @using (Html.BeginForm("Index", "Register", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <h4>會員註冊</h4>

                <!--帳號-->
                <div class="form-inline ">
                    @Html.LabelFor(model => model.member_account, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.member_account, new { htmlAttributes = new { @class = "form-control ml-2" } })
                </div>
                @Html.ValidationMessageFor(model => model.member_account, "", new { @class = "text-danger" })

                <!--密碼-->
                <div class="form-inline mt-3">
                    @Html.LabelFor(model => model.member_password, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.member_password, new { htmlAttributes = new { @class = "form-control ml-2" } })
                </div>
                @Html.ValidationMessageFor(model => model.member_password, "", new { @class = "text-danger" })

                <!--姓名-->
                <div class="form-inline mt-3">
                    <label class="control-label">姓名</label>
                    @Html.EditorFor(model => model.member_profile.member_name, new { htmlAttributes = new { @class = "form-control ml-2" } })
                </div>
                @Html.ValidationMessageFor(model => model.member_profile.member_name, "", new { @class = "text-danger" })


                <!--性別-->
                <div class="form-inline mt-3">
                    @Html.LabelFor(model => model.member_profile.gender, htmlAttributes: new { @class = "control-label" })
                    <select name="member_profile.gender" class="form-control ml-2">
                        <option value="true">男</option>
                        <option value="false">女</option>
                    </select>

                    <!--生日-->
                    @Html.LabelFor(model => model.member_profile.birthday, htmlAttributes: new { @class = "control-label  ml-2" })
                    @Html.TextBoxFor(model => model.member_profile.birthday, new { @type = "date", @class = "form-control datepicker ml-2" })
                </div>


                <!--暱稱-->
                <div class="form-inline mt-3">
                    @Html.LabelFor(model => model.member_profile.nickname, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.member_profile.nickname, new { htmlAttributes = new { @class = "form-control ml-2" } })
                </div>
                @Html.ValidationMessageFor(model => model.member_profile.nickname, "", new { @class = "text-danger" })

                <!--國家-->
                <div class="form-inline mt-3">
                    @Html.LabelFor(model => model.member_profile.nation, htmlAttributes: new { @class = "control-label  " })
                    <select id="newnation" name="member_profile.nation" class="form-control ml-2">
                        <option value="台灣">台灣</option>
                    </select>

                    <!--城市-->
                    @Html.LabelFor(model => model.member_profile.city, htmlAttributes: new { @class = "control-label  ml-2" })
                    <select id="newcity" name="member_profile.city" class="form-control ml-2">
                        <option value="北部地區" disabled>北部地區</option>
                        <option value="台北市">台北市</option>
                        <option value="新北市">新北市</option>
                        <option value="基隆市">基隆市</option>
                        <option value="桃園市">桃園市</option>
                        <option value="新竹市">新竹市</option>
                        <option value="新竹縣">新竹縣</option>
                        <option value="苗栗縣">苗栗縣</option>
                        <option value="中部地區" disabled>中部地區</option>
                        <option value="台中市">台中市</option>
                        <option value="彰化縣">彰化縣</option>
                        <option value="南投縣">南投縣</option>
                        <option value="南部地區" disabled>南部地區</option>
                        <option value="雲林縣">雲林縣</option>
                        <option value="嘉義市">嘉義市</option>
                        <option value="嘉義縣">嘉義縣</option>
                        <option value="台南市">台南市</option>
                        <option value="高雄市">高雄市</option>
                        <option value="屏東縣">屏東縣</option>
                        <option value="東部地區" disabled>東部地區</option>
                        <option value="宜蘭縣">宜蘭縣</option>
                        <option value="花蓮縣">花蓮縣</option>
                        <option value="台東縣">台東縣</option>
                        <option value="離島地區" disabled>離島地區</option>
                        <option value="澎湖縣">澎湖縣</option>
                        <option value="金門縣">金門縣</option>
                        <option value="連江縣">連江縣</option>
                    </select>
                </div>



                <!--信箱-->
                <div class="form-inline mt-3">
                    @Html.LabelFor(model => model.member_profile.email, htmlAttributes: new { @class = "control-label  " })
                    @Html.EditorFor(model => model.member_profile.email, new { htmlAttributes = new { @class = "form-control ml-2" } })
                </div>
                @Html.ValidationMessageFor(model => model.member_profile.email, "", new { @class = "text-danger" })

                <!--電話-->
                <div class="form-inline mt-3">
                    <label class="control-label">電話</label>
                    @Html.EditorFor(model => model.member_profile.phone, new { htmlAttributes = new { @class = "form-control ml-2" } })
                </div>
                @Html.ValidationMessageFor(model => model.member_profile.phone, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.member_profile.member_id)
                @Html.HiddenFor(model => model.member_profile.member_score)

                <div class="form-inline mt-3">
                    <input type="submit" value="送出" class="btn btn-primary" />
                </div>



            }

            <div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">
    (function ($) {
        $.fn.snow = function (options) {
            var $flake = $('<div id="snowbox" />').css({ 'position': 'absolute', 'z-index': '9999', 'top': '-50px' }).html('&#10052;'),
                documentHeight = $(document).height(),
                documentWidth = $(document).width(),
                defaults = {
                    minSize: 10,
                    maxSize: 20,
                    newOn: 1000,
                    flakeColor: "#AFDAEF" /* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */
                },
                options = $.extend({}, defaults, options);
            var interval = setInterval(function () {
                var startPositionLeft = Math.random() * documentWidth - 100,
                    startOpacity = 0.5 + Math.random(),
                    sizeFlake = options.minSize + Math.random() * options.maxSize,
                    endPositionTop = documentHeight - 200,
                    endPositionLeft = startPositionLeft - 500 + Math.random() * 500,
                    durationFall = documentHeight * 10 + Math.random() * 5000;
                $flake.clone().appendTo('body').css({
                    left: startPositionLeft,
                    opacity: startOpacity,
                    'font-size': sizeFlake,
                    color: options.flakeColor
                }).animate({
                    top: endPositionTop,
                    left: endPositionLeft,
                    opacity: 0.2
                }, durationFall, 'linear', function () {
                    $(this).remove()
                });
            }, options.newOn);
        };
    })(jQuery);
    $(function () {
        $.fn.snow({
            minSize: 5, /* 定义雪花最小尺寸 */
            maxSize: 50,/* 定义雪花最大尺寸 */
            newOn: 2000  /* 定义密集程度，数字越小越密集 */
        });
    });
</script>