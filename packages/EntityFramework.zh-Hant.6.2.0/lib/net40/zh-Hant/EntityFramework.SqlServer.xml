<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>EntityFramework.SqlServer</name>
  </assembly>
  <members>
    <member name="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy">
      <summary>
        <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" />，藉以重試因 SQL Azure 暫時性失敗導致擲回例外狀況的動作。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor">
      <summary>建立 <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" /> 的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.#ctor(System.Int32,System.TimeSpan)">
      <summary>使用指定的重試次數限制以及重試之間的延遲，來建立 <see cref="T:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy" /> 的新執行個體。</summary>
      <param name="maxRetryCount">重試次數的上限。</param>
      <param name="maxDelay">重試之間的最大延遲 (以毫秒為單位)。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlAzureExecutionStrategy.ShouldRetryOn(System.Exception)">
      <summary>判斷指定的例外狀況是否應該重試。</summary>
      <returns>如果指定的例外狀況應該重試，則為 true，否則為 false。</returns>
      <param name="exception">要重試的例外狀況。</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlFunctions">
      <summary>包含公開 LINQ to Entities 中各種 SqlServer 方法的函式 Stub。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Decimal})">
      <summary>會傳回角度 (以弧度為單位) 的數學函數，此角度的餘弦函數是指定的數值。此角度稱為反餘弦值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg1">角度的餘弦函數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Acos(System.Nullable{System.Double})">
      <summary>會傳回角度 (以弧度為單位) 的數學函數，此角度的餘弦函數是指定的數值。此角度稱為反餘弦值。</summary>
      <returns>以弧度為單位的角度，由輸入餘弦函數值定義。</returns>
      <param name="arg1">角度的餘弦函數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Ascii(System.String)">
      <summary>傳回字元運算式最左側字元的 ASCII 碼值。</summary>
      <returns>輸入字串中第一個字元的 ASCII 碼。</returns>
      <param name="arg">有效的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Decimal})">
      <summary>會傳回角度 (以弧度為單位) 的數學函數，此角度的正弦函數是指定的數值。此角度稱為反正弦值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg">角度的正弦函數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Asin(System.Nullable{System.Double})">
      <summary>會傳回角度 (以弧度為單位) 的數學函數，此角度的正弦函數是指定的數值。此角度稱為反正弦值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg">角度的正弦函數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Decimal})">
      <summary>會傳回角度 (以弧度為單位) 的數學函數，此角度的正切函數是指定的數值。此角度稱為反正切值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg">角度的正切函數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan(System.Nullable{System.Double})">
      <summary>會傳回角度 (以弧度為單位) 的數學函數，此角度的正切函數是指定的數值。此角度稱為反正切值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg">角度的正切函數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>傳回正 X 軸與原點至 (x, y) 的直線之間的正角度 (以弧度為單位)，其中 x 和 y 是兩個指定的數值。第一個傳遞給函式的參數是 Y 值，而第二個參數則是 X 值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg1">點的 Y 座標。</param>
      <param name="arg2">點的 X 座標。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Atan2(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>傳回正 X 軸與原點至 (x, y) 的直線之間的正角度 (以弧度為單位)，其中 x 和 y 是兩個指定的數值。第一個傳遞給函式的參數是 Y 值，而第二個參數則是 X 值。</summary>
      <returns>以弧度為測量單位的角度。</returns>
      <param name="arg1">點的 Y 座標。</param>
      <param name="arg2">點的 X 座標。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Char(System.Nullable{System.Int32})">
      <summary>傳回對應到指定之整數 ASCII 值的字元。</summary>
      <returns>對應到指定之 ASCII 值的字元。</returns>
      <param name="arg">ASCII 碼。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[])">
      <summary>傳回在一個運算式內找到之另一個運算式的起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為該目標的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int32})">
      <summary>傳回在一個運算式內找到之另一個運算式的起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為該目標的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從此位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.Byte[],System.Byte[],System.Nullable{System.Int64})">
      <summary>傳回在一個運算式內找到之另一個運算式的起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為該目標的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從此位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String)">
      <summary>傳回在一個運算式內找到之另一個運算式的起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為該目標的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int32})">
      <summary>傳回在一個運算式內找到之另一個運算式的起始位置。</summary>
      <returns>如果在 toSearch 中找到目標，則為該目標的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從此位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CharIndex(System.String,System.String,System.Nullable{System.Int64})">
      <summary>傳回在一個運算式內找到之另一個運算式的起始位置。</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.Int64" /> 值，如果在 toSearch 中找到目標，此值即為該目標的起始位置。</returns>
      <param name="toSearch">要搜尋的字串運算式。</param>
      <param name="target">要尋找的字串運算式。</param>
      <param name="startLocation">toSearch 中的字元位置，搜尋會從此位置開始。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[])">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的字元陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[])">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的字元陣列。</param>
      <param name="arg2">要計算其總和檢查碼的字元陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Byte[],System.Byte[],System.Byte[])">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的字元陣列。</param>
      <param name="arg2">要計算其總和檢查碼的字元陣列。</param>
      <param name="arg3">要計算其總和檢查碼的字元陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String)">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String)">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Checksum(System.String,System.String,System.String)">
      <summary>傳回針對輸入引數所計算的總和檢查碼值。</summary>
      <returns>針對輸入值所計算的總和檢查碼。</returns>
      <param name="arg1">要計算其總和檢查碼的值。</param>
      <param name="arg2">要計算其總和檢查碼的值。</param>
      <param name="arg3">要計算其總和檢查碼的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
      <summary>傳回集合中值的總和檢查碼 (Checksum)。系統會忽略 Null 值。</summary>
      <returns>從輸入集合所計算出的總和檢查碼。</returns>
      <param name="arg">要對其計算總和檢查碼的值集合。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
      <summary>傳回集合中值的總和檢查碼 (Checksum)。系統會忽略 Null 值。</summary>
      <returns>從輸入集合所計算出的總和檢查碼。</returns>
      <param name="arg">要對其計算總和檢查碼的值集合。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Decimal})">
      <summary>傳回指定運算式中指定之角度的三角餘弦值，以弧度為單位。</summary>
      <returns>指定之角度的三角餘弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cos(System.Nullable{System.Double})">
      <summary>傳回指定運算式中指定之角度的三角餘弦值，以弧度為單位。</summary>
      <returns>指定之角度的三角餘弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Decimal})">
      <summary>傳回指定角度 (以弧度為單位) 之三角餘切值的數學函式。</summary>
      <returns>指定之角度的三角餘切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Cot(System.Nullable{System.Double})">
      <summary>傳回指定角度 (以弧度為單位) 之三角餘切值的數學函式。</summary>
      <returns>指定之角度的三角餘切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentTimestamp">
      <summary>傳回目前的日期和時間。</summary>
      <returns>目前的日期和時間。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.CurrentUser">
      <summary>傳回目前使用者的名稱。</summary>
      <returns>目前使用者的名稱。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Byte[])">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Boolean})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTime})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.DateTimeOffset})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Decimal})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Double})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.Guid})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.Nullable{System.TimeSpan})">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DataLength(System.String)">
      <summary>傳回用來代表任何運算式的位元組數。</summary>
      <returns>輸入值的位元組數目。</returns>
      <param name="arg">要檢查其資料長度的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTime})">
      <summary>依據將間隔加入至指定的日期，傳回新的 datetime 值。</summary>
      <returns>新的日期。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="date">要遞增的日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.DateTimeOffset})">
      <summary>依據將間隔加入至指定的日期，傳回新的日期值。</summary>
      <returns>新的時間點，以一天的日期和時間表示，相對於國際標準時間 (Coordinated Universal Time，UTC)。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="dateTimeOffsetArg">要遞增的日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.Nullable{System.TimeSpan})">
      <summary>依據將間隔加入至指定的時間範圍，傳回新的時間範圍值。</summary>
      <returns>新的時間範圍。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="time">要遞增的時間範圍。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateAdd(System.String,System.Nullable{System.Double},System.String)">
      <summary>依據將間隔加入至指定的日期，傳回新的 datetime 值。</summary>
      <returns>
        <see cref="T:System.Nullable`1" /> 的 <see cref="T:System.DateTime" /> 值，代表新的日期。</returns>
      <param name="datePartArg">要遞增的日期部分。</param>
      <param name="number">用於依照指定量遞增日期的值。</param>
      <param name="date">要遞增的日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.DateTimeOffset},System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.Nullable{System.TimeSpan},System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTime})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.DateTimeOffset})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.Nullable{System.TimeSpan})">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>指定兩個日期之間的時間間隔數目的值。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateDiff(System.String,System.String,System.String)">
      <summary>傳回指定的開始和結束日期之間，所跨過之指定日期部分界限的計數。</summary>
      <returns>兩個日期之間的時間間隔數目。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="startDate">第一個日期。</param>
      <param name="endDate">第二個日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTime})">
      <summary>傳回字元字串，此字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>傳回字元字串，此字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.Nullable{System.TimeSpan})">
      <summary>傳回字元字串，此字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DateName(System.String,System.String)">
      <summary>傳回字元字串，此字串表示指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定部分。</returns>
      <param name="datePartArg">要計算時間間隔數目差異的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTime})">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.DateTimeOffset})">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.Nullable{System.TimeSpan})">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.DatePart(System.String,System.String)">
      <summary>傳回整數，此整數代表指定之日期的指定日期部分。</summary>
      <returns>指定之日期的指定日期部分。</returns>
      <param name="datePartArg">要傳回值的日期部分。</param>
      <param name="date">日期。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Decimal})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Double})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int32})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Degrees(System.Nullable{System.Int64})">
      <summary>針對以弧度為單位所指定的角度，傳回以度數為單位的對應角度。</summary>
      <returns>轉換為度數的指定角度。</returns>
      <param name="arg1">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Difference(System.String,System.String)">
      <summary>傳回整數值，此值指出兩個字元運算式的 SOUNDEX 值間的差異。</summary>
      <returns>兩個字串之間的 SOUNDEX 差異。</returns>
      <param name="string1">第一個字串。</param>
      <param name="string2">第二個字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Decimal})">
      <summary>傳回指定之浮點運算式的指數值。</summary>
      <returns>對輸入值做乘冪運算的乘冪常數 e。</returns>
      <param name="arg">輸入值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Exp(System.Nullable{System.Double})">
      <summary>傳回指定之浮點運算式的指數值。</summary>
      <returns>對輸入值做乘冪運算的乘冪常數 e。</returns>
      <param name="arg">輸入值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetDate">
      <summary>傳回目前資料庫系統時間戳記做為 datetime 值 (沒有資料庫時區時差)。此值是從執行 SQL Server 執行個體的電腦作業系統得來的。</summary>
      <returns>目前的資料庫時間戳記。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.GetUtcDate">
      <summary>傳回目前資料庫系統時間戳記做為 datetime 值。其中不包含資料庫的時區位移。此值表示目前的 UTC 時間 (國際標準時間)。此值是從執行 SQL Server 執行個體的電腦作業系統得來的。</summary>
      <returns>目前資料庫的 UTC 時間戳記。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.HostName">
      <summary>傳回工作站名稱。</summary>
      <returns>工作站的名稱。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsDate(System.String)">
      <summary>指出輸入值是否為有效的日期或時間。</summary>
      <returns>如果輸入運算式為 datetime 或 smalldatetime 資料類型的有效日期或時間值，則為 1，否則為 0。</returns>
      <param name="arg">測試過的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.IsNumeric(System.String)">
      <summary>指出輸入值是否為有效的數字類型。</summary>
      <returns>如果輸入運算式是有效的數字資料類型，則為 1，否則為 0。</returns>
      <param name="arg">字串運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Decimal})">
      <summary>傳回指定之輸入值的自然對數。</summary>
      <returns>輸入值的自然對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log(System.Nullable{System.Double})">
      <summary>傳回指定之輸入值的自然對數。</summary>
      <returns>輸入值的自然對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Decimal})">
      <summary>傳回指定之輸入值的以 10 為基底之對數。</summary>
      <returns>輸入值的以 10 為基底之對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Log10(System.Nullable{System.Double})">
      <summary>傳回指定之輸入值的以 10 為基底之對數。</summary>
      <returns>輸入值的以 10 為基底之對數。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.NChar(System.Nullable{System.Int32})">
      <summary>依照 Unicode 標準所定義，傳回含指定之整數碼的 Unicode 字元。</summary>
      <returns>對應至輸入字元碼的字元。</returns>
      <param name="arg">字元碼。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.PatIndex(System.String,System.String)">
      <summary>傳回指定運算式中第一次出現模式的起始位置，如果找不到該模式則傳回零，這項作業是針對所有有效文字和字元資料類型進行的。</summary>
      <returns>找到字串模式的起始字元位置。</returns>
      <param name="stringPattern">要搜尋的字串模式。</param>
      <param name="target">要搜尋的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Pi">
      <summary>傳回 pi 的常數值。</summary>
      <returns>pi 的數值。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String)">
      <summary>傳回已加入分隔符號的 Unicode 字串，讓輸入字串成為有效的 Microsoft SQL Server 分隔識別碼。</summary>
      <returns>已加入方括號的原始字串。</returns>
      <param name="stringArg">要加入引號字元的運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.QuoteName(System.String,System.String)">
      <summary>傳回已加入分隔符號的 Unicode 字串，讓輸入字串成為有效的 Microsoft SQL Server 分隔識別碼。</summary>
      <returns>已加入指定之引號字元的原始字串。</returns>
      <param name="stringArg">要加入引號字元的運算式。</param>
      <param name="quoteCharacter">用來做為分隔符號的單字元字串。它可以是單引號 ( ' )、左或右方括號 ( [ ] )，或雙引號 ( " )。如果沒有指定引號字元，就會使用方括號。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Decimal})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Double})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int32})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Radians(System.Nullable{System.Int64})">
      <summary>傳回對應至以度數為單位之指定角度的弧度度量。</summary>
      <returns>指定之角度的弧度度量。</returns>
      <param name="arg">以度數測量的角度</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand">
      <summary>傳回介於 0 與 1 之間 (不含 0 與 1) 的虛擬隨機浮點值。</summary>
      <returns>虛擬隨機值。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Rand(System.Nullable{System.Int32})">
      <summary>傳回介於 0 與 1 之間 (不含 0 與 1) 的虛擬隨機浮點值。</summary>
      <returns>虛擬隨機值。</returns>
      <param name="seed">初始值。如果沒有指定初始值，SQL Server Database Engine 就會隨機指派一個初始值。只要指定初始值之後，傳回的結果一律相同。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Replicate(System.String,System.Nullable{System.Int32})">
      <summary>依照指定次數重複字串值。</summary>
      <returns>目標字串，重複由 count 所指定的次數。</returns>
      <param name="target">有效的字串。</param>
      <param name="count">指定目標所要重複次數的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Decimal})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Double})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int32})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sign(System.Nullable{System.Int64})">
      <summary>傳回指定運算式的正 (+1)、零 (0) 或負 (-1) 號。</summary>
      <returns>輸入運算式的正負號。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Decimal})">
      <summary>傳回指定之角度的三角正弦值。</summary>
      <returns>輸入運算式的三角正弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Sin(System.Nullable{System.Double})">
      <summary>傳回指定之角度的三角正弦值。</summary>
      <returns>輸入運算式的三角正弦值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SoundCode(System.String)">
      <summary>將英數字串轉換成四個字元 (SOUNDEX) 的代碼，以尋找發音相似的單字或名稱。</summary>
      <returns>輸入字串的 SOUNDEX 碼。</returns>
      <param name="arg">有效的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Space(System.Nullable{System.Int32})">
      <summary>傳回重複空格的字串。</summary>
      <returns>由指定空格數所組成的字串。</returns>
      <param name="arg1">空格的數目。如果是負數，則會傳回 null 字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Decimal})">
      <summary>傳回指定之數字的平方。</summary>
      <returns>輸入值的平方。</returns>
      <param name="arg1">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Square(System.Nullable{System.Double})">
      <summary>傳回指定之數字的平方。</summary>
      <returns>輸入值的平方。</returns>
      <param name="arg1">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Decimal})">
      <summary>傳回指定數字的平方根。</summary>
      <returns>輸入值的平方根。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.SquareRoot(System.Nullable{System.Double})">
      <summary>傳回指定數字的平方根。</summary>
      <returns>輸入值的平方根。</returns>
      <param name="arg">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的輸入運算式。</returns>
      <param name="number">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。其中包括小數點、正負號、位數和空格。預設值為 10。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。其中包括小數點、正負號、位數和空格。預設值為 10。</param>
      <param name="decimalArg">小數點右邊的位數。小數位數必須小於或等於 16。如果小數位數超過 16，結果會被截斷至小數點右邊的 16 位數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的數值輸入運算式。</returns>
      <param name="number">數值運算式。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的數值輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。其中包括小數點、正負號、位數和空格。預設值為 10。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.StringConvert(System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary>傳回從數值資料轉換而來的字元資料。</summary>
      <returns>轉換成字串的數值輸入運算式。</returns>
      <param name="number">數值運算式。</param>
      <param name="length">字串的總長度。其中包括小數點、正負號、位數和空格。預設值為 10。</param>
      <param name="decimalArg">小數點右邊的位數。小數位數必須小於或等於 16。如果小數位數超過 16，結果會被截斷至小數點右邊的 16 位數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Stuff(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
      <summary>將某個字串插入另一個字串中。這樣會從開始位置，刪除目標字串中指定長度的字元，然後再於開始位置處，將第二個字串插入目標字串中。</summary>
      <returns>由這兩個字串組成的字串。</returns>
      <param name="stringInput">目標字串。</param>
      <param name="start">stringinput 中要插入取代字串的字元位置。</param>
      <param name="length">要從 stringInput 中刪除的字元數目。如果 length 大於 stringInput，刪除動作就會進行到 stringReplacement 的最後一個字元。</param>
      <param name="stringReplacement">要插入到 stringInput 中的子字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Decimal})">
      <summary>傳回輸入運算式的三角正切值。</summary>
      <returns>輸入角度的正切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Tan(System.Nullable{System.Double})">
      <summary>傳回輸入運算式的三角正切值。</summary>
      <returns>輸入角度的正切值。</returns>
      <param name="arg">以弧度為測量單位的角度。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.Unicode(System.String)">
      <summary>依照 Unicode 標準所定義，傳回輸入運算式第一個字元的整數值。</summary>
      <returns>輸入字串中第一個字元的字元碼。</returns>
      <param name="arg">有效的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName">
      <summary>傳回與指定識別碼相對應的資料庫使用者名稱。</summary>
      <returns>使用者名稱。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlFunctions.UserName(System.Nullable{System.Int32})">
      <summary>傳回與指定識別碼相對應的資料庫使用者名稱。</summary>
      <returns>使用者名稱。</returns>
      <param name="arg">使用者識別碼。</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlProviderServices">
      <summary>SQL Server SqlClient 提供者的 DbProviderServices 實作。</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.Instance">
      <summary>SqlProviderServices 類型的單一執行個體。</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlProviderServices" />.</returns>
    </member>
    <member name="F:System.Data.Entity.SqlServer.SqlProviderServices.ProviderInvariantName">
      <summary>此為組態檔及以程式碼為基礎的組態中當成「提供者非變異名稱」使用的已知字串，用意是指定 Microsoft SQL Server 的 ADO.NET 和 Entity Framework 提供者服務。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlProviderServices.RegisterInfoMessageHandler(System.Data.Common.DbConnection,System.Action{System.String})">
      <summary>註冊處理常式，以處理來自資料庫提供者的非錯誤訊息。</summary>
      <param name="connection">用來接收資訊的連接。</param>
      <param name="handler">處理訊息的處理常式。</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.SqlServerTypesAssemblyName">
      <summary>設定為 Microsoft.SqlServer.Types 組件的完整名稱，以覆寫預設選擇</summary>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlProviderServices.TruncateDecimalsToScale">
      <summary>將此旗標設定為 false 可防止 <see cref="T:System.Decimal" /> 值被截斷成定義於資料行的小數位數。預設值為 true，表示將會截斷十進位值，以免破壞了倚賴此行為的現有應用程式。</summary>
      <returns>傳回 <see cref="T:System.Boolean" />。</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator">
      <summary>表示要將無從驗證提供者之移轉作業轉換成 SQL 命令的提供者，這些命令可對 Microsoft SQL Server 資料庫執行。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.#ctor">
      <summary>初始化 <see cref="T:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator" /> 類別的新執行個體。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
      <summary>產生 SQL 以指定資料行的資料類型。此方法只會產生實際類型，而非建立資料行的 SQL。</summary>
      <returns>表示資料類型的 SQL。</returns>
      <param name="columnModel">資料行的定義。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.CreateConnection">
      <summary>建立目前提供者的空白連接。可讓衍生的提供者使用 <see cref="T:System.Data.SqlClient.SqlConnection" /> 以外的連接。</summary>
      <returns>目前提供者的空白連接。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.DropDefaultConstraint(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>呼叫此方法可以產生 SQL，此 SQL 會嘗試卸除在建立資料行時建立的預設條件約束。此方法通常是由覆寫資料行之建立或變更內容的程式碼來呼叫。</summary>
      <param name="table">要套用條件約束的目標資料表。</param>
      <param name="column">要套用條件約束的目標資料行。</param>
      <param name="writer">產生的 SQL 要寫入的目標寫入器。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Boolean)">
      <summary>產生 SQL 以指定針對資料行所設定的常數 bool 預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Byte[])">
      <summary>產生 SQL 以指定針對資料行所設定的常數 byte[] 預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
      <summary>將一組移轉作業轉換成 Microsoft SQL Server 特有的 SQL。</summary>
      <returns>為了進行移轉作業所執行的 SQL 陳述式清單。</returns>
      <param name="migrationOperations">要轉換的作業。</param>
      <param name="providerManifestToken">表示設為目標之 SQL Server 版本的語彙基元 (亦即 2005", "2008").</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="addColumnOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="addForeignKeyOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="addPrimaryKeyOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="alterColumnOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterProcedureOperation)">
      <summary>產生指定的修改程序作業。</summary>
      <param name="alterProcedureOperation">修改程序作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterTableOperation)">
      <summary>當資料表的定義或其屬性變更時，請覆寫此方法來產生 SQL。此方法的預設實作不執行任何動作。</summary>
      <param name="alterTableOperation">描述資料表之變更的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>為指定的資料行模型產生 SQL。此方法是由其他會處理資料行的方法呼叫，而且可以經過覆寫來變更產生的 SQL。</summary>
      <param name="column">用來產生 SQL 的資料行。</param>
      <param name="writer">產生的 SQL 要寫入的目標寫入器。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="createIndexOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateProcedureOperation)">
      <summary>產生指定的建立程序作業。</summary>
      <param name="createProcedureOperation">建立程序作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="createTableOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="dropColumnOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="dropForeignKeyOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="dropIndexOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="dropPrimaryKeyOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropProcedureOperation)">
      <summary>產生指定的卸除程序作業。</summary>
      <param name="dropProcedureOperation">卸除程序作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="dropTableOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.HistoryOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.HistoryOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="historyOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MigrationOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.MigrationOperation" /> 的 SQL。允許衍生的提供者處理其他作業類型。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="migrationOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveProcedureOperation)">
      <summary>產生指定的移動程序作業。</summary>
      <param name="moveProcedureOperation">移動程序作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="moveTableOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="renameColumnOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameIndexOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.RenameIndexOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="renameIndexOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameProcedureOperation)">
      <summary>產生指定的重新命名程序作業。</summary>
      <param name="renameProcedureOperation">重新命名程序作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="renameTableOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="sqlOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.UpdateDatabaseOperation)">
      <summary>產生指定的更新資料庫作業，此作業表示套用一系列移轉。產生的指令碼是等冪，也就是說它包含條件式邏輯，可以檢查是否已套用個別移轉以及是否只套用擱置中的移轉。</summary>
      <param name="updateDatabaseOperation">更新資料庫作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeography)">
      <summary>產生 SQL 以指定針對資料行所設定的常數地理預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>產生 SQL 以指定針對資料行所設定的常數幾何預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTime)">
      <summary>產生 SQL 以指定針對資料行所設定的常數 DateTime 預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
      <summary>產生 SQL 以指定針對資料行所設定的常數 DateTimeOffset 預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Guid)">
      <summary>產生 SQL 以指定針對資料行所設定的常數 Guid 預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.Object)">
      <summary>產生 SQL 以指定針對資料行所設定的常數預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.String)">
      <summary>產生 SQL 以指定針對資料行所設定的常數字串預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
      <summary>產生 SQL 以指定針對資料行所設定的常數 TimeSpan 預設值。此方法只會產生實際值，而非設定預設值的 SQL。</summary>
      <returns>表示預設值的 SQL。</returns>
      <param name="defaultValue">要設定的值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
      <summary>產生 SQL 以建立資料庫結構描述。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="schema">要建立的結構描述名稱。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>產生 SQL 以將資料表標示為系統資料表。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="createTableOperation">要標示為系統資料表的資料表。</param>
      <param name="writer">所產生 SQL 的寫入目標 <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" />。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GenerateProcedureBody(System.Collections.Generic.ICollection{System.Data.Entity.Core.Common.CommandTrees.DbModificationCommandTree},System.String,System.String)">
      <summary>產生預存程序的 SQL 本文。</summary>
      <returns>預存程序的 SQL 本文。</returns>
      <param name="commandTrees">表示插入、更新或刪除作業等命令的命令樹。</param>
      <param name="rowsAffectedParameter">受影響資料列參數名稱。</param>
      <param name="providerManifestToken">提供者資訊清單語彙基元。</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.GuidColumnDefault">
      <summary>如果在移轉期間未明確指定資料行預設值，則會傳回用於存放產生之 GUID 資料行的資料行預設值。如果是內部部署 SQL Server 2005 (含) 以後版本，則傳回 newsequentialid()。如果是 SQL Azure，則傳回 newid()。</summary>
      <returns>如上所述，傳回 newsequentialid() 或 newid()。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Name(System.String)">
      <summary>產生引號名稱。提供的名稱不一定會包含結構描述。</summary>
      <returns>引號名稱。</returns>
      <param name="name">要加上引號的名稱。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Quote(System.String)">
      <summary>為 SQL Server 的識別項加上引號。</summary>
      <returns>引號識別項。</returns>
      <param name="identifier">要加上引號的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String)">
      <summary>加入要對資料庫執行的新陳述式。</summary>
      <param name="writer">包含要執行之 SQL 的寫入器。</param>
      <param name="batchTerminator">資料庫提供者的批次結束字元。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean,System.String)">
      <summary>加入要對資料庫執行的新陳述式。</summary>
      <param name="sql">要執行的陳述式。</param>
      <param name="suppressTransaction">指出是否應在可以讓移轉處理序進行交易的交易範圍外部執行此陳述式。如果設定為 true，系統就不會在移轉處理序失敗時回復此作業。</param>
      <param name="batchTerminator">資料庫提供者的批次結束字元。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.StatementBatch(System.String,System.Boolean)">
      <summary>將 SQL 字串分解成一或多個陳述式，以在必要時用於處理 T-SQL 公用程式陳述式。</summary>
      <param name="sqlBatch">要分割成一或多個陳述式加以執行的 SQL。</param>
      <param name="suppressTransaction">取得或設定值，指出是否應該在用來讓移轉處理序可交易的交易範圍以外執行此陳述式。如果設定為 true，系統就不會在移轉處理序失敗時回復此作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
      <summary>產生 <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation" /> 的 SQL。您應該使用 Statement 方法來加入產生的 SQL。</summary>
      <param name="createTableOperation">要產生 SQL 的作業。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.WriteCreateTable(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
      <summary>將 CREATE TABLE SQL 寫入目標寫入器。</summary>
      <param name="createTableOperation">要產生 SQL 的作業。</param>
      <param name="writer">目標寫入器。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlServerMigrationSqlGenerator.Writer">
      <summary>取得可用來建置 SQL 的新 <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter" />。這只是建立寫入器的 Helper 方法。寫入此寫入器不會導致 SQL 註冊並執行。您必須將產生的 SQL 傳遞給 Statement 方法。</summary>
      <returns>要用於 SQL 產生的空白文字寫入器。</returns>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialFunctions">
      <summary>包含公開 LINQ to Entities 中各種 SqlServer 方法的函式 Stub。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法，此執行個體本身包含的所有 Z (高度) 和 M (量值) 值都已增大。</summary>
      <returns>地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.AsTextZM(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回地理執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法，此執行個體本身包含的所有 Z (高度) 和 M (量值) 值都已增大。</summary>
      <returns>幾何執行個體的「開放地理空間協會」(OGC) 已知文字 (WKT) 表示法。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>傳回幾何物件，表示在允許的指定容限下，與地理執行個體相距小於或等於指定值之所有點值的聯集。</summary>
      <returns>所有點值的聯集，其與地理執行個體的距離小於或等於指定的值</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="distance">距離。</param>
      <param name="tolerance">指定的容限。</param>
      <param name="relative">指定容限值是相對還是絕對。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.BufferWithTolerance(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Boolean})">
      <summary>傳回幾何物件，表示在允許的指定容限下，與幾何執行個體相距小於或等於指定值之所有點值的聯集。</summary>
      <returns>所有點值的聯集，其與幾何執行個體的距離小於或等於指定的值</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="distance">距離。</param>
      <param name="tolerance">指定的容限。</param>
      <param name="relative">指定容限值是相對還是絕對。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeAngle(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回 EnvelopeCenter() 所傳回的點與地理執行個體中的點之間的最大角度，以度為單位。</summary>
      <returns>與 EnvelopeCenter() 所傳回的點之間的最大角度。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.EnvelopeCenter(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回可當做地理執行個體周框圓形中心使用的點。</summary>
      <returns>指定周框圓形中心位置的 SqlGeography 值。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>提供快速、僅限索引的交集方法，在索引可使用的假設下，判斷地理執行個體是否與另一個 SqlGeography 執行個體有交集。</summary>
      <returns>如果地理執行個體可能與另一個 SqlGeography 執行個體有交集，則為 true，否則為 false。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="geographyOther">要與叫用篩選器之執行個體比較的另一個地理執行個體。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Filter(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>提供快速、僅限索引的交集方法，在索引可使用的假設下，判斷地理執行個體是否與另一個 SqlGeometry 執行個體有交集。</summary>
      <returns>如果地理執行個體可能與另一個 SqlGeography 執行個體有交集，則為 true，否則為 false。</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="geometryOther">要與叫用篩選器之執行個體比較的另一個地理執行個體。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeography,System.String)">
      <summary>測試 SqlGeography 執行個體是否與指定的類型相同。</summary>
      <returns>字串，指定其中一個在地理類型階層架構中公開的 12 個類型。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="geometryTypeName">字串，指定其中一個在地理類型階層架構中公開的 12 個類型。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.InstanceOf(System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>測試 SqlGeometry 執行個體是否與指定的類型相同。</summary>
      <returns>字串，指定其中一個在地理類型階層架構中公開的 12 個類型。</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="geometryTypeName">字串，指定其中一個在地理類型階層架構中公開的 12 個類型。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.MakeValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>將無效的幾何執行個體轉換成有效「開放地理空間協會」(OGC) 類型的幾何執行個體。</summary>
      <returns>轉換的幾何執行個體。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.NumRings(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回多邊形執行個體中的環形總數。</summary>
      <returns>環形總數。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeography(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>從 x 和 y 值及空間參考 ID (SRID) 建構表示 Point 執行個體的地理執行個體。</summary>
      <returns>建構的地理執行個體。</returns>
      <param name="latitude">正在產生之 Point 的 X 座標。</param>
      <param name="longitude">正在產生之 Point 的 Y 座標</param>
      <param name="spatialReferenceId">地理執行個體的 SRID。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.PointGeometry(System.Nullable{System.Double},System.Nullable{System.Double},System.Nullable{System.Int32})">
      <summary>從 x 和 y 值及空間參考 ID (SRID) 建構表示 Point 執行個體的幾何執行個體。</summary>
      <returns>建構的幾何執行個體。</returns>
      <param name="xCoordinate">正在產生之 Point 的 X 座標。</param>
      <param name="yCoordinate">正在產生之 Point 的 Y 座標</param>
      <param name="spatialReferenceId">地理執行個體的 SRID。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Double})">
      <summary>傳回指定之地理執行個體的近似值，產生的方法是在指定的容限下，對執行個體執行 Douglas-Peucker 演算法。</summary>
      <returns>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeography" />。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="tolerance">要輸入至 Douglas-Peucker 演算法的容限。容限必須是正數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.Reduce(System.Data.Entity.Spatial.DbGeometry,System.Nullable{System.Double})">
      <summary>傳回指定之地理執行個體的近似值，產生的方法是在指定的容限下，對執行個體執行 Douglas-Peucker 演算法。</summary>
      <returns>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeometry" />。</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="tolerance">要輸入至 Douglas-Peucker 演算法的容限。容限必須是正數。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialFunctions.RingN(System.Data.Entity.Spatial.DbGeography,System.Nullable{System.Int32})">
      <summary>傳回 SqlGeography 執行個體的指定環：1 ≤ n ≤ NumRings()。</summary>
      <returns>表示 n 所指定之環形的 SqlGeography 物件。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="index">介於 1 到多邊形執行個體中的環形數目之間的 int 運算式。</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.SqlSpatialServices">
      <summary>表示 <see cref="T:System.Data.Entity.Spatial.DbSpatialServices" /> 的實作，可在 Microsoft SQL Server 搭配使用 Entity Framework 時支援地理空間類型。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeography)">
      <summary>取得所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的已知二進位表示法。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的已知二進位表示法。</returns>
      <param name="geographyValue">應該產生已知二進位表示法的地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsBinary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>取得所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的已知二進位表示法。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的已知二進位表示法。</returns>
      <param name="geometryValue">應該產生已知二進位表示法的幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeography)">
      <summary>產生此 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的地理標記語言 (GML) 表示。</summary>
      <returns>包含此 DbGeography 值之 GML 表示的字串。</returns>
      <param name="geographyValue">應該針對此地理位置值產生 GML。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsGml(System.Data.Entity.Spatial.DbGeometry)">
      <summary>產生此 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的地理標記語言 (GML) 表示。</summary>
      <returns>包含此 DbGeometry 值之 GML 表示的字串。</returns>
      <param name="geometryValue">應該針對此幾何值產生 GML。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsText(System.Data.Entity.Spatial.DbGeography)">
      <summary>取得所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的已知文字表示法。此值應該只包含點的經度和緯度。</summary>
      <returns>包含 <paramref name="geographyValue" /> 的已知文字表示的字串。</returns>
      <param name="geographyValue">應該產生已知文字表示法的地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsText(System.Data.Entity.Spatial.DbGeometry)">
      <summary>取得所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的已知文字表示法，僅包括點的 X 和 Y 座標。</summary>
      <returns>包含 <paramref name="geometryValue" /> 的已知文字表示的字串。</returns>
      <param name="geometryValue">應該產生已知文字表示法的幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回含有高度及量值之 <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" /> 的文字表示法。</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" /> 的文字表示法。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.AsTextIncludingElevationAndMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回含有高度及量值之 <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" /> 的文字表示法。</summary>
      <returns>
        <see cref="T:System.Data.Entity.SqlServer.SqlSpatialServices" /> 的文字表示法。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeography,System.Double)">
      <summary>建立一個地理位置值，表示所有與給定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值相距小於或等於 distance 的點。</summary>
      <returns>新的 DbGeography 值，表示所有小於或等於與 <paramref name="geographyValue" /> 之距離的點。</returns>
      <param name="geographyValue">地理位置值。</param>
      <param name="distance">指定 <paramref name="geographyValue" /> 與緩衝區相距多遠的雙精度值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Buffer(System.Data.Entity.Spatial.DbGeometry,System.Double)">
      <summary>建立一個幾何值，表示所有與給定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值相距小於或等於 distance 的點。</summary>
      <returns>新的 DbGeometry 值，表示所有小於或等於與 <paramref name="geometryValue" /> 之距離的點。</returns>
      <param name="geometryValue">幾何值。</param>
      <param name="distance">指定 <paramref name="geometryValue" /> 與緩衝區相距多遠的雙精度值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Contains(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷一個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上包含其他幾何。</summary>
      <returns>若 <paramref name="geometryValue" /> 包含 <paramref name="otherGeometry" />，則為 true，否則為 false。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeographyWellKnownValue)">
      <summary>根據指定的已知 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 表示法，建立與此空間服務實作相容的提供者特定值。</summary>
      <returns>提供者特定值，此值以相容於此空間服務實作的方式將 <paramref name="wellKnownValue" /> 中所包含的資訊編碼。</returns>
      <param name="wellKnownValue">
        <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" /> 的執行個體，其中包含地理位置值的已知表示法。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateProviderValue(System.Data.Entity.Spatial.DbGeometryWellKnownValue)">
      <summary>根據指定的已知 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 表示法，建立與此空間服務實作相容的提供者特定值。</summary>
      <returns>提供者特定值，此值以相容於此空間服務實作的方式將 <paramref name="wellKnownValue" /> 中所包含的資訊編碼。</returns>
      <param name="wellKnownValue">
        <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" /> 的執行個體，其中包含幾何值的已知表示法。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeography)">
      <summary>建立 <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" /> 的執行個體，此執行個體使用一種或兩種標準的已知空間格式表示指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeographyWellKnownValue" />，是 <paramref name="geographyValue" /> 的已知表示。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.CreateWellKnownValue(System.Data.Entity.Spatial.DbGeometry)">
      <summary>建立 <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" /> 的執行個體，此執行個體使用一種或兩種標準的已知空間格式表示指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometryWellKnownValue" />，是 <paramref name="geometryValue" /> 的已知表示。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Crosses(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上交叉。</summary>
      <returns>若 <paramref name="geometryValue" /> 與 <paramref name="otherGeometry" /> 交叉，則為 true，否則為 false。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Difference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值之間的差異。</summary>
      <returns>表示 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 之間差異的新 DbGeography 值。</returns>
      <param name="geographyValue">第一個地理位置值。</param>
      <param name="otherGeography">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Difference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值之間的差異。</summary>
      <returns>表示 <paramref name="geometryValue" /> 與 <paramref name="otherGeometry" /> 之間差異的新 DbGeometry 值。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值是否在空間上不相交。</summary>
      <returns>若 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 沒有交集，則為 true，否則為 false。</returns>
      <param name="geographyValue">要比較不相交的第一個地理位置值。</param>
      <param name="otherGeography">要比較不相交的第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Disjoint(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上不相交。</summary>
      <returns>若 <paramref name="geometryValue" /> 與 <paramref name="otherGeometry" /> 沒有交集，則為 true，否則為 false。</returns>
      <param name="geometryValue">要比較不相交的第一個幾何值。</param>
      <param name="otherGeometry">要比較不相交的第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Distance(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值中最接近點之間的距離。</summary>
      <returns>指定 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 中兩個最接近點之間距離的雙精度值。</returns>
      <param name="geographyValue">第一個地理位置值。</param>
      <param name="otherGeography">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Distance(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值中最接近點之間的距離。</summary>
      <returns>指定 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 中兩個最接近點之間距離的雙精度值。</returns>
      <param name="geometryValue">第一個地理位置值。</param>
      <param name="otherGeometry">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的項目 (若此值代表地理集合)。</summary>
      <returns>若 <paramref name="geographyValue" /> 表示其他地理位置值的集合，即為其中位於 <paramref name="index" /> 位置的項目，否則為 null。</returns>
      <param name="geographyValue">地理位置值，不需要代表地理位置集合。</param>
      <param name="index">此地理位置值中的位置，應該在此取得項目。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.ElementAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的項目 (若此值代表幾何集合)。</summary>
      <returns>若 <paramref name="geographyValue" /> 表示其他地理位置值的集合，即為其中位於 <paramref name="index" /> 位置的項目，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表幾何集合。</param>
      <param name="index">此幾何值中的位置，應該在此取得項目。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 集合值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="geographyCollectionWellKnownBinary">包含地理位置值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyCollectionFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 集合值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="geographyCollectionWellKnownText">包含地理位置值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromBinary(System.Byte[])">
      <summary>根據指定的已知二進位值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有預設 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="wellKnownBinary">包含地理位置值的已知二進位表示法的位元組陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="wellKnownBinary">包含地理位置值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromGml(System.String)">
      <summary>根據指定的地理標記語言 (GML) 值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有預設 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的 GML 值所定義。</returns>
      <param name="geographyMarkup">包含地理位置值之幾何標記語言 (GML) 表示的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromGml(System.String,System.Int32)">
      <summary>根據指定的地理標記語言 (GML) 值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定之座標系統識別項 (SRID) 的 GML 值所定義。</returns>
      <param name="geographyMarkup">包含地理位置值之幾何標記語言 (GML) 表示的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromProviderValue(System.Object)">
      <summary>根據與此空間服務實作的提供者特定值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>由此空間服務實作及指定之提供者值所支援的新 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</returns>
      <param name="providerValue">此空間服務實作可以解譯為地理值的提供者特定值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromText(System.String)">
      <summary>根據指定的已知文字值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有預設 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="wellKnownText">包含地理位置值之已知文字表示法的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="wellKnownText">包含地理位置值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyLineFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="lineWellKnownBinary">包含地理位置值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyLineFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="lineWellKnownText">包含地理位置值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多線值。</returns>
      <param name="multiLineWellKnownBinary">已知二進位值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiLineFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多線值。</returns>
      <param name="multiLineWellKnownText">已知文字值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多點值。</returns>
      <param name="multiPointWellKnownBinary">已知二進位值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPointFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多點值。</returns>
      <param name="multiPointWellKnownText">已知文字值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多多邊形值。</returns>
      <param name="multiPolygonWellKnownBinary">已知二進位值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyMultiPolygonFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多多邊形值。</returns>
      <param name="multiPolygonKnownText">已知文字值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPointFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="pointWellKnownBinary">包含地理位置值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPointFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="pointWellKnownText">包含地理位置值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="polygonWellKnownBinary">包含地理位置值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeographyPolygonFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeography.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="polygonWellKnownText">包含地理位置值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryCollectionFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 集合值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="geometryCollectionWellKnownBinary">包含幾何值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryCollectionFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 集合值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="geometryCollectionWellKnownText">包含幾何值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromBinary(System.Byte[])">
      <summary>根據指定的已知二進位值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有預設 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="wellKnownBinary">包含幾何值的已知二進位表示法的位元組陣列。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="wellKnownBinary">包含幾何值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromGml(System.String)">
      <summary>根據指定的地理標記語言 (GML) 值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有預設 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的 GML 值所定義。</returns>
      <param name="geometryMarkup">包含幾何值之地理標記語言 (GML) 表示的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromGml(System.String,System.Int32)">
      <summary>根據指定的地理標記語言 (GML) 值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定之座標系統識別項 (SRID) 的 GML 值所定義。</returns>
      <param name="geometryMarkup">包含幾何值之地理標記語言 (GML) 表示的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromProviderValue(System.Object)">
      <summary>根據與此空間服務實作的提供者特定值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>由此空間服務實作及指定之提供者值所支援的新 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</returns>
      <param name="providerValue">此空間服務實作可以解譯為幾何值的提供者特定值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromText(System.String)">
      <summary>根據指定的已知文字值，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有預設 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="wellKnownText">包含幾何值之已知文字表示法的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="wellKnownText">包含幾何值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryLineFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="lineWellKnownBinary">包含幾何值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryLineFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="lineWellKnownText">包含幾何值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiLineFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多線值。</returns>
      <param name="multiLineWellKnownBinary">已知二進位值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiLineFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多線值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多線值。</returns>
      <param name="multiLineWellKnownText">已知文字值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPointFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多點值。</returns>
      <param name="multiPointWellKnownBinary">已知二進位值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPointFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多點值。</returns>
      <param name="multiPointWellKnownText">已知文字值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多多邊形值。</returns>
      <param name="multiPolygonWellKnownBinary">已知二進位值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryMultiPolygonFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多多邊形值。</returns>
      <param name="multiPolygonKnownText">已知文字值。</param>
      <param name="coordinateSystemId">座標系統識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPointFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="pointWellKnownBinary">包含幾何值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPointFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 點值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="pointWellKnownText">包含幾何值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPolygonFromBinary(System.Byte[],System.Int32)">
      <summary>根據指定的已知二進位值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知二進位值所定義。</returns>
      <param name="polygonWellKnownBinary">包含幾何值的已知二進位表示法的位元組陣列。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GeometryPolygonFromText(System.String,System.Int32)">
      <summary>根據指定的已知文字值和座標系統識別項 (SRID)，建立新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 多邊形值。</summary>
      <returns>新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，由具有指定的座標系統識別項 (SRID) (<see cref="P:System.Data.Entity.Spatial.DbGeometry.DefaultCoordinateSystemId" />) 的已知文字值所定義。</returns>
      <param name="polygonWellKnownText">包含幾何值之已知文字表示法的字串。</param>
      <param name="coordinateSystemId">新的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值應該使用的座標系統的識別項。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回可為 Null 的雙精度浮點數值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的範圍，如果該值不代表表面，就可能為 null。</summary>
      <returns>可為 null 的雙精度浮點數值，表示所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的面積。</returns>
      <param name="geographyValue">地理位置值，不需要代表表面。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetArea(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的雙精度浮點數值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的範圍，如果該值不代表表面，就可能為 null。</summary>
      <returns>可為 null 的雙精度浮點數值，表示所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的面積。</returns>
      <param name="geometryValue">幾何值，不需要代表表面。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetBoundary(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的雙精度浮點數值，表示所指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的界限。</summary>
      <returns>指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的界限。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCentroid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，此值代表指定 DbGeometry 值的中心點，如果該值不代表表面，就可能為 null。</summary>
      <returns>若 <paramref name="geometryValue" /> 代表表面，即為該表面的中心點，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表表面。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetConvexHull(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的雙精度浮點數值，表示所指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的凸面。</summary>
      <returns>指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的凸殼。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的座標系統識別項。</summary>
      <returns>指定之 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的座標系統識別項。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetCoordinateSystemId(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的座標系統識別項。</summary>
      <returns>指定之 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的座標系統識別項。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeography)">
      <summary>取得給定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的維度，若值為集合，則為其最大項目的維度。</summary>
      <returns>
        <paramref name="geographyValue" /> 的維度，若 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 是集合則為最大項目維度。</returns>
      <param name="geographyValue">應該針對此地理位置值擷取維度值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetDimension(System.Data.Entity.Spatial.DbGeometry)">
      <summary>取得給定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的維度，若值為集合，則為其最大項目的維度。</summary>
      <returns>
        <paramref name="geometryValue" /> 的維度，若 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 是集合則為最大項目維度。</returns>
      <param name="geometryValue">應該針對此幾何值擷取維度值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回給定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值中的項目數量 (若此值代表地理集合)。</summary>
      <returns>若 <paramref name="geographyValue" /> 表示其他地理位置值的集合，即為其中的項目數，否則為 null。</returns>
      <param name="geographyValue">地理位置值，不需要代表地理位置集合。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElementCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回給定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值中的項目數量 (若此值代表幾何集合)。</summary>
      <returns>若 <paramref name="geometryValue" /> 表示其他幾何值的集合，即為其中的項目數，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表幾何集合。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回給定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值 (如果它代表點) 的高度 (Z 座標)。</summary>
      <returns>
        <paramref name="geographyValue" /> 的高度 (Z 座標) (若其代表點)，否則為 null。</returns>
      <param name="geographyValue">地理位置值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetElevation(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回給定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值 (如果它代表點) 的高度 (Z)。</summary>
      <returns>若 <paramref name="geometryValue" /> 代表點，即為該點的高度 (Z)，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，此值代表指定 DbGeography 值的結束點，如果該值不代表曲線，則可能為 null。</summary>
      <returns>若 <paramref name="geographyValue" /> 代表曲線，即為該曲線的結束點，否則為 null。</returns>
      <param name="geographyValue">地理位置值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEndPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，此值代表指定 DbGeometry 值的結束點，如果該值不代表曲線，則可能為 null。</summary>
      <returns>若 <paramref name="geometryValue" /> 代表曲線，即為該曲線的結束點，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetEnvelope(System.Data.Entity.Spatial.DbGeometry)">
      <summary>取得指定之 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的封套 (最小的周框方塊)，做為幾何值。</summary>
      <returns>
        <paramref name="geometryValue" /> 的封套，做為 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</returns>
      <param name="geometryValue">應該針對此幾何值擷取封套值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetExteriorRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，此值代表指定 DbGeometry 值的外環，如果該值不代表多邊形，則可能為 null。</summary>
      <returns>若 <paramref name="geometryValue" /> 代表多邊形，即為表示該多邊形外環的 DbGeometry 值，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表多邊形。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetInteriorRingCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值中的內環數目 (如果它代表多邊形)。</summary>
      <returns>若 <paramref name="geometryValue" /> 代表多邊形，即為其中的項目數，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表多邊形。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值是否封閉，如果該值不代表曲線，則可能為 null。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值為封閉，則為 true，否則為 false。</returns>
      <param name="geographyValue">地理位置值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsClosed(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否封閉，如果該值不代表曲線，則可能為 null。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值為封閉，則為 true，否則為 false。</returns>
      <param name="geometryValue">幾何值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值是否為空的。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是空的，則為 true，否則為 false。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsEmpty(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否為空的。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是空的，則為 true，否則為 false。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsRing(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否為環形，如果該值不代表曲線，則可能為 null。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是環形，則為 true，否則為 false。</returns>
      <param name="geometryValue">幾何值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsSimple(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否為簡單值。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是簡單值，則為 true，否則為 false。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetIsValid(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的布林值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否有效。</summary>
      <returns>若指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值有效，則為 true，否則為 false。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLatitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的緯度座標 (若其代表點)。</summary>
      <returns>指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的緯度座標。</returns>
      <param name="geographyValue">地理位置值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回可為 Null 的雙精度浮點數值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的長度，如果該值不代表曲線，則可能為 null。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的長度。</returns>
      <param name="geographyValue">地理位置值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLength(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回可為 Null 的雙精度浮點數值，指出指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的長度，如果該值不代表曲線，則可能為 null。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的長度。</returns>
      <param name="geometryValue">幾何值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetLongitude(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的經度座標 (若其代表點)。</summary>
      <returns>指定 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的經度座標。</returns>
      <param name="geographyValue">地理位置值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的 M (量值) 座標 (如果它代表點)。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的 M (量值) 座標。</returns>
      <param name="geographyValue">地理位置值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetMeasure(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的 M (量值) 座標 (如果它代表點)。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的 M (量值) 座標。</returns>
      <param name="geometryValue">幾何值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值中的點數 (如果它代表 linestring 或線型圓圈)。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值中的點數目。</returns>
      <param name="geographyValue">地理位置值，不需要代表 linestring 或線型圓圈。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointCount(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值中的點數 (如果它代表 linestring 或線型圓圈)。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值中的點數目。</returns>
      <param name="geometryValue">幾何值，不需要代表 linestring 或線型圓圈。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetPointOnSurface(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，此值代表指定 DbGeometry 值的表面上的一點，如果該值不代表表面，就可能為 null。</summary>
      <returns>
        <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，代表指定 <paramref name="geometryValue" /> 之表面上的一點。</returns>
      <param name="geometryValue">幾何值，不需要代表表面。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回值，此值表示指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的空間類型名稱。</summary>
      <returns>指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的空間類型名稱。</returns>
      <param name="geographyValue">地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetSpatialTypeName(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回值，此值表示指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的空間類型名稱。</summary>
      <returns>指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的空間類型名稱。</returns>
      <param name="geometryValue">幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeography)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值，此值代表指定 DbGeography 值的起始點，如果該值不代表曲線，則可能為 null。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的起始點。</returns>
      <param name="geographyValue">地理位置值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetStartPoint(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值，此值代表指定 DbGeometry 值的起始點，如果該值不代表曲線，則可能為 null。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的起始點。</returns>
      <param name="geometryValue">幾何值，不需要代表曲線。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetXCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的 X 座標 (如果它代表點)。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的 X 座標。</returns>
      <param name="geometryValue">幾何值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.GetYCoordinate(System.Data.Entity.Spatial.DbGeometry)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的 Y 座標 (如果它代表點)。</summary>
      <returns>所指 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的 Y 座標。</returns>
      <param name="geometryValue">幾何值，不需要代表點。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.InteriorRingAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>從指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值傳回內環 (如果它代表多邊形)。</summary>
      <returns>
        <paramref name="geometryValue" /> 中位於 <paramref name="index" /> 位置的內環 (若其代表多邊形)，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表多邊形。</param>
      <param name="index">此幾何值中的位置，應該在此取得項目。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的交集。</summary>
      <returns>表示 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 之間交集的新 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</returns>
      <param name="geographyValue">第一個地理位置值。</param>
      <param name="otherGeography">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersection(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的交集。</summary>
      <returns>表示 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 之間交集的新 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>判斷兩個給定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值是否為空間相交的值。</summary>
      <returns>若 <paramref name="geographyValue" /> 和 <paramref name="otherGeography" /> 交集，則為 true，否則為 false。</returns>
      <param name="geographyValue">要比較交集的第一個地理位置值。</param>
      <param name="otherGeography">要比較交集的第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Intersects(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷兩個給定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否為空間相交的值。</summary>
      <returns>若 <paramref name="geographyValue" /> 和 <paramref name="otherGeography" /> 交集，則為 true，否則為 false。</returns>
      <param name="geometryValue">要比較交集的第一個幾何值。</param>
      <param name="otherGeometry">要比較交集的第二個幾何值。</param>
    </member>
    <member name="P:System.Data.Entity.SqlServer.SqlSpatialServices.NativeTypesAvailable">
      <summary>取得值，指出 EF 會假設提供者具有必要的類型/資源而繼續執行，並不會立即失敗。預設值為 true。</summary>
      <returns>若 EF 會假設提供者具有必要的類型/資源而繼續執行，並不會立即失敗，則為 true，否則為 false。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Overlaps(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上重疊。</summary>
      <returns>若 <paramref name="geometryValue" /> 和 <paramref name="otherGeometry" /> 重疊，則為 true，否則為 false。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeography,System.Int32)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的點項目 (如果它代表 linestring 或線型圓圈)。</summary>
      <returns>
        <paramref name="geographyValue" /> 中位於 <paramref name="index" /> 位置的點 (若其代表 linestring 或線型圓圈)，否則為 null。</returns>
      <param name="geographyValue">地理位置值，不需要代表 linestring 或線型圓圈。</param>
      <param name="index">此地理位置值中的位置，應該在此取得項目。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.PointAt(System.Data.Entity.Spatial.DbGeometry,System.Int32)">
      <summary>傳回指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值的點項目 (如果它代表 linestring 或線型圓圈)。</summary>
      <returns>
        <paramref name="geometryValue" /> 中位於 <paramref name="index" /> 位置的點 (若其代表 linestring 或線型圓圈)，否則為 null。</returns>
      <param name="geometryValue">幾何值，不需要代表 linestring 或線型圓圈。</param>
      <param name="index">此幾何值中的位置，應該在此取得項目。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Relate(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry,System.String)">
      <summary>依據指定的維度延伸九交模型 (DE-9IM) 交集模式，判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上有關聯。</summary>
      <returns>若依指定的交集模式<paramref name="matrix" />，此 <paramref name="geometryValue" /> 值和 <paramref name="otherGeometry" /> 相關，則為 true，否則為 false。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">應該和第一個幾何值針對關聯做比較的幾何值。</param>
      <param name="matrix">包含定義關聯性之 (DE-9IM) 交集模式文字表示的字串。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值是否在空間上相等。</summary>
      <returns>若在空間上 <paramref name="geographyValue" /> 等於 <paramref name="otherGeography" />，則為 true，否則為 false。</returns>
      <param name="geographyValue">要比較是否相等的第一個地理位置值。</param>
      <param name="otherGeography">要比較是否相等的第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SpatialEquals(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上相等。</summary>
      <returns>若在空間上 <paramref name="geometryValue" /> 等於 <paramref name="otherGeometry" />，則為 true，否則為 false。</returns>
      <param name="geometryValue">要比較是否相等的第一個幾何值。</param>
      <param name="otherGeometry">要比較是否相等的第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值的對稱差異。</summary>
      <returns>表示 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 之間對稱差異的新 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</returns>
      <param name="geographyValue">第一個地理位置值。</param>
      <param name="otherGeography">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.SymmetricDifference(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值之間的對稱差異。</summary>
      <returns>表示 <paramref name="geometryValue" /> 與 <paramref name="otherGeometry" /> 之間對稱差異的新 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Touches(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷兩個指定的 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上相接觸。</summary>
      <returns>若 <paramref name="geometryValue" /> 和 <paramref name="otherGeometry" /> 相接觸，則為 true，否則為 false。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Union(System.Data.Entity.Spatial.DbGeography,System.Data.Entity.Spatial.DbGeography)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值之間的聯集。</summary>
      <returns>表示 <paramref name="geographyValue" /> 與 <paramref name="otherGeography" /> 之間聯集的新 <see cref="T:System.Data.Entity.Spatial.DbGeography" /> 值。</returns>
      <param name="geographyValue">第一個地理位置值。</param>
      <param name="otherGeography">第二個地理位置值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Union(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>計算兩個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值之間的聯集。</summary>
      <returns>表示 <paramref name="geometryValue" /> 與 <paramref name="otherGeometry" /> 之間聯集的新 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.SqlSpatialServices.Within(System.Data.Entity.Spatial.DbGeometry,System.Data.Entity.Spatial.DbGeometry)">
      <summary>判斷一個 <see cref="T:System.Data.Entity.Spatial.DbGeometry" /> 值是否在空間上位於其他幾何之內。</summary>
      <returns>若 geometryValue 在 otherGeometry 內部，則為 true，否則為 false。</returns>
      <param name="geometryValue">第一個幾何值。</param>
      <param name="otherGeometry">第二個幾何值。</param>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions">
      <summary>包含 <see cref="T:System.Threading.Tasks.Task" /> 類別的擴充方法。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.WithCurrentCulture(System.Threading.Tasks.Task)">
      <summary>設定 awaiter 用於等候此 <see cref="T:System.Threading.Tasks.Task" />，以避免將接續封送處理回原始的內容，但仍保留目前的文化與 UI 文化。</summary>
      <returns>用於等候此工作的物件。</returns>
      <param name="task">要等候的工作。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.WithCurrentCulture``1(System.Threading.Tasks.Task{``0})">
      <summary>設定 awaiter 用於等候此 <see cref="T:System.Threading.Tasks.Task`1" />，以避免將接續封送處理回原始的內容，但仍保留目前的文化與 UI 文化。</summary>
      <returns>用於等候此工作的物件。</returns>
      <param name="task">要等候的工作。</param>
      <typeparam name="T">相關聯之 <see cref="T:System.Threading.Tasks.Task`1" /> 所產生的結果類型。</typeparam>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter">
      <summary>提供可等候的物件，用於等候保留文化的 <see cref="T:System.Threading.Tasks.Task" />。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.#ctor(System.Threading.Tasks.Task)">
      <summary>建構 <see cref="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter" /> 類別的新執行個體。</summary>
      <param name="task">要等候的工作。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.GetAwaiter">
      <summary>取得 awaiter 來等候此 <see cref="T:System.Threading.Tasks.Task" />。</summary>
      <returns>awaiter 執行個體。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.GetResult">
      <summary>結束等候已完成的 <see cref="T:System.Threading.Tasks.Task" />。</summary>
      <exception cref="T:System.NullReferenceException">未正確地初始化 awaiter。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">這項工作已取消。</exception>
      <exception cref="T:System.Exception">這項工作已完成但發生錯誤。</exception>
    </member>
    <member name="P:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.IsCompleted">
      <summary>無論此 <see cref="T:System.Threading.Tasks.Task" /> 完成與否，一律取得。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.OnCompleted(System.Action)">
      <summary>這個方法未實作，請勿呼叫。</summary>
      <param name="continuation">當等候作業完成時所要叫用的動作。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter.UnsafeOnCompleted(System.Action)">
      <summary>排程接續到此 <see cref="T:System.Runtime.CompilerServices.TaskAwaiter" /> 相關聯的 <see cref="T:System.Threading.Tasks.Task" /> 的時間。</summary>
      <param name="continuation">當等候作業完成時所要叫用的動作。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="continuation" /> 引數為 Null (Visual Basic 中沒有對等項目)。</exception>
      <exception cref="T:System.InvalidOperationException">未正確地初始化 awaiter。</exception>
    </member>
    <member name="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1">
      <summary>提供可等候的物件，用於等候保留文化的 <see cref="T:System.Threading.Tasks.Task`1" />。</summary>
      <typeparam name="T">相關聯之 <see cref="T:System.Threading.Tasks.Task`1" /> 所產生的結果類型。</typeparam>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.#ctor(System.Threading.Tasks.Task{`0})">
      <summary>建構 <see cref="T:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1" /> 類別的新執行個體。</summary>
      <param name="task">要等候的工作。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.GetAwaiter">
      <summary>取得 awaiter 來等候此 <see cref="T:System.Threading.Tasks.Task`1" />。</summary>
      <returns>awaiter 執行個體。</returns>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.GetResult">
      <summary>結束等候已完成的 <see cref="T:System.Threading.Tasks.Task`1" />。</summary>
      <returns>已完成之 <see cref="T:System.Threading.Tasks.Task`1" /> 的結果。</returns>
      <exception cref="T:System.NullReferenceException">未正確地初始化 awaiter。</exception>
      <exception cref="T:System.Threading.Tasks.TaskCanceledException">這項工作已取消。</exception>
      <exception cref="T:System.Exception">這項工作已完成但發生錯誤。</exception>
    </member>
    <member name="P:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.IsCompleted">
      <summary>無論此 <see cref="T:System.Threading.Tasks.Task" /> 完成與否，一律取得。</summary>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.OnCompleted(System.Action)">
      <summary>這個方法未實作，請勿呼叫。</summary>
      <param name="continuation">當等候作業完成時所要叫用的動作。</param>
    </member>
    <member name="M:System.Data.Entity.SqlServer.Utilities.TaskExtensions.CultureAwaiter`1.UnsafeOnCompleted(System.Action)">
      <summary>排程接續到此 <see cref="T:System.Runtime.CompilerServices.TaskAwaiter`1" /> 相關聯的 <see cref="T:System.Threading.Tasks.Task`1" /> 的時間。</summary>
      <param name="continuation">當等候作業完成時所要叫用的動作。</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="continuation" /> 引數為 Null (Visual Basic 中沒有對等項目)。</exception>
      <exception cref="T:System.InvalidOperationException">未正確地初始化 awaiter。</exception>
    </member>
  </members>
</doc>